Help is available on the following:

*		cursor		keyp		pons		setpen
+		define		label		pop		setpencolor
-		definedp	last		popl		setpensize
.defmacro	dequeue 	left		popls		setpos
.eq		difference	lessp		pops		setprefix
.macro		do.until	list		pos		setread
.maybeoutput	do.while	listp		pot		setreadpos
.setbf		dribble 	listtoarray	pots		setscrunch
.setfirst	edall		ln		power		settemploc
.setitem	edit		load		pprop		settextcolor
.setsegmentsize editfile	loadnoisily	prefix		setwrite
/		edn		loadpict	primitivep	setwritepos
<		edns		local		print		setx
<=		edpl		localmake	printdepthlimit setxy
<>		edpls		log10		printwidthlimit sety
=		edps		lowercase	procedurep	shell
>		emptyp		lput		procedures	show
>=		eofp		lshift		product 	shownp
`		epspict 	macroexpand	push		showturtle
allopen 	equalp		macrop		queue		sin
allowgetset	erall		make		quoted		splitscreen
and		erase		map		quotient	sqrt
apply		erasefile	map.se		radarctan	standout
arc		ern		mdarray 	radcos		startup
arctan		erns		mditem		radsin		step
arity		erpl		mdsetitem	random		stepped
array		erpls		member		rawascii	steppedp
arrayp		erps		memberp 	readchar	stop
arraytolist	erract		minus		readchars	substringp
ascii		error		modulo		reader		sum
ashift		exp		name		readlist	tag
back		fence		namelist	readpos 	test
background	filep		namep		readrawline	text
backslashedp	fill		names		readword	textscreen
beforep 	filter		nodes		redefp		thing
bitand		find		nodribble	reduce		throw
bitnot		first		norefresh	refresh 	to
bitor		firsts		not		remainder	towards
bitxor		for		numberp 	remdup		trace
buried		foreach 	openappend	remove		traced
buriedp 	forever 	openread	remprop 	tracedp
bury		form		openupdate	repcount	transfer
buryall 	forward 	openwrite	repeat		turtlemode
buryname	fput		or		rerandom	type
butfirst	fullprintp	output		reverse 	unbury
butfirsts	fullscreen	palette 	right		unburyall
butlast 	fulltext	parse		round		unburyname
bye		gc		pause		rseq		unburyonedit
cascade 	gensym		pen		run		unstep
case		global		pencolor	runparse	until
caseignoredp	goto		pendown 	runresult	untrace
catch		gprop		pendownp	save		uppercase
char		greaterp	penerase	savel		usealternatenam
clean		heading 	penmode 	savepict	wait
clearscreen	help		penpaint	screenmode	while
cleartext	hideturtle	penreverse	scrunch 	window
close		home		pensize 	sentence	word
closeall	if		penup		setbackground	wordp
combine 	ifelse		pick		setcursor	wrap
cond		iffalse 	plist		seteditor	writepos
contents	iftrue		plistp		setheading	writer
continue	ignore		plists		sethelploc	xcor
copydef 	int		pllist		setitem 	ycor
cos		invoke		po		setlibloc
count		iseq		poall		setmargins
crossmap	item		pon		setpalette
